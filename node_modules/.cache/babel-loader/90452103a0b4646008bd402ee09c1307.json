{"ast":null,"code":"var _jsxFileName = \"/Users/pro/Documents/React/goit-react-hw-04-hooks-feedback/src/components/Feedback/feedback.jsx\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport { Button } from './feedback.styled';\nimport { UseState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FeedbackOptions() {\n  _s();\n\n  const [options, onLeaveFeedback] = useState();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: options.map(option => /*#__PURE__*/_jsxDEV(Button, {\n      onClick: onLeaveFeedback,\n      name: option,\n      children: option\n    }, option, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FeedbackOptions, \"lzsDTWi3rNX60UJN5gSnItFR7K0=\");\n\n_c = FeedbackOptions;\n;\nFeedbackOptions.propTypes = {\n  options: PropTypes.string.isRequired\n};\nexport default FeedbackOptions;\n\nvar _c;\n\n$RefreshReg$(_c, \"FeedbackOptions\");","map":{"version":3,"sources":["/Users/pro/Documents/React/goit-react-hw-04-hooks-feedback/src/components/Feedback/feedback.jsx"],"names":["PropTypes","Button","UseState","FeedbackOptions","options","onLeaveFeedback","useState","map","option","propTypes","string","isRequired"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAGA,SAASC,eAAT,GAA2B;AAAA;;AACvB,QAAM,CAACC,OAAD,EAAUC,eAAV,IAA6BC,QAAQ,EAA3C;AACA,sBACA;AAAA,cACSF,OAAO,CAACG,GAAR,CAAYC,MAAM,iBACvB,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEH,eAAjB;AAEI,MAAA,IAAI,EAAEG,MAFV;AAAA,gBAIKA;AAJL,OACSA,MADT;AAAA;AAAA;AAAA;AAAA,YADK;AADT;AAAA;AAAA;AAAA;AAAA,UADA;AAaH;;GAfQL,e;;KAAAA,e;AAeR;AAEDA,eAAe,CAACM,SAAhB,GAA4B;AACxBL,EAAAA,OAAO,EAAEJ,SAAS,CAACU,MAAV,CAAiBC;AADF,CAA5B;AAIA,eAAeR,eAAf","sourcesContent":["import PropTypes from 'prop-types';\nimport { Button } from './feedback.styled';\nimport { UseState } from 'react';\n\n\nfunction FeedbackOptions() {\n    const [options, onLeaveFeedback] = useState()\n    return (\n    <div>\n            {options.map(option => (\n        <Button onClick={onLeaveFeedback}\n            key={option}\n            name={option}\n        >\n            {option}\n        </Button>\n        ))}\n\n    </div>\n    );\n};  \n\nFeedbackOptions.propTypes = {\n    options: PropTypes.string.isRequired,\n};\n\nexport default FeedbackOptions;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/pro/Documents/React/goit-react-hw-04-hooks-feedback/src/components/App.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport Feedback from './Feedback/feedback';\nimport Section from './Section/section';\nimport Statistics from './Statistics/statistics';\nimport Notification from './Notification/notification';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function App() {\n  _s();\n\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const [total, setTotal] = useState(0);\n\n  const countTotalFeedback = () => {\n    setTotal(good + neutral + bad);\n  };\n\n  const changePoint = e => {\n    this.setState(prevState => {\n      const currentName = e.target.name;\n      return {\n        [currentName]: prevState[currentName] + 1\n      };\n    });\n  };\n\n  const countPositiveFeedbackPercentage = () => {\n    const total = countTotalFeedback();\n    return Math.round(good * 100 / total);\n  };\n\n  const options = {\n    good,\n    neutral,\n    bad\n  };\n  const totalFeedback = this.countTotalFeedback();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Section, {\n      title: \"Please leave feedback\",\n      children: /*#__PURE__*/_jsxDEV(Feedback, {\n        options: options,\n        onLeaveFeedback: this.changePoint\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Section, {\n      title: \"Statistics\",\n      children: !!totalFeedback && /*#__PURE__*/_jsxDEV(Statistics, {\n        good: good,\n        neutral: neutral,\n        bad: bad,\n        total: totalFeedback,\n        positivePercentage: this.countPositiveFeedbackPercentage()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 1\n    }, this), !totalFeedback && /*#__PURE__*/_jsxDEV(Notification, {\n      message: \"There is no feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"dRsTqApJtWIArC5jDJyGkRK1Szw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/pro/Documents/React/goit-react-hw-04-hooks-feedback/src/components/App.jsx"],"names":["useState","useEffect","Feedback","Section","Statistics","Notification","App","good","setGood","neutral","setNeutral","bad","setBad","total","setTotal","countTotalFeedback","changePoint","e","setState","prevState","currentName","target","name","countPositiveFeedbackPercentage","Math","round","options","totalFeedback"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,QAAP,MAAsB,qBAAtB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,YAAP,MAAyB,6BAAzB;;;AAEA,OAAO,SAASC,GAAT,GAAe;AAAA;;AACpB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACW,GAAD,EAAMC,MAAN,IAAgBZ,QAAQ,CAAC,CAAD,CAA9B;AACA,QAAM,CAACa,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,CAAD,CAAlC;;AAEA,QAAMe,kBAAkB,GAAG,MAAM;AAC/BD,IAAAA,QAAQ,CAACP,IAAI,GAAGE,OAAP,GAAiBE,GAAlB,CAAR;AACD,GAFD;;AAIA,QAAMK,WAAW,GAAGC,CAAC,IAAI;AACvB,SAAKC,QAAL,CAAcC,SAAS,IAAI;AACzB,YAAMC,WAAW,GAAGH,CAAC,CAACI,MAAF,CAASC,IAA7B;AACA,aAAO;AAAE,SAACF,WAAD,GAAeD,SAAS,CAACC,WAAD,CAAT,GAAyB;AAA1C,OAAP;AACD,KAHD;AAID,GALD;;AAQA,QAAMG,+BAA+B,GAAG,MAAM;AAC5C,UAAMV,KAAK,GAAGE,kBAAkB,EAAhC;AACA,WAAOS,IAAI,CAACC,KAAL,CAAYlB,IAAI,GAAG,GAAR,GAAeM,KAA1B,CAAP;AACD,GAHD;;AAME,QAAMa,OAAO,GAAG;AAACnB,IAAAA,IAAD;AAAOE,IAAAA,OAAP;AAAgBE,IAAAA;AAAhB,GAAhB;AACA,QAAMgB,aAAa,GAAG,KAAKZ,kBAAL,EAAtB;AACA,sBACE;AAAA,4BACE,QAAC,OAAD;AAAS,MAAA,KAAK,EAAC,uBAAf;AAAA,6BACF,QAAC,QAAD;AACI,QAAA,OAAO,EAAEW,OADb;AAEI,QAAA,eAAe,EAAE,KAAKV;AAF1B;AAAA;AAAA;AAAA;AAAA;AADE;AAAA;AAAA;AAAA;AAAA,YADF,eAON,QAAC,OAAD;AAAS,MAAA,KAAK,EAAC,YAAf;AAAA,gBACC,CAAC,CAACW,aAAF,iBACG,QAAC,UAAD;AACE,QAAA,IAAI,EAAEpB,IADR;AAEE,QAAA,OAAO,EAAEE,OAFX;AAGE,QAAA,GAAG,EAAEE,GAHP;AAIE,QAAA,KAAK,EAAEgB,aAJT;AAKE,QAAA,kBAAkB,EAAE,KAAKJ,+BAAL;AALtB;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,YAPM,EAkBL,CAACI,aAAD,iBAAkB,QAAC,YAAD;AAAc,MAAA,OAAO,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA,YAlBb;AAAA,kBADF;AAsBD;;GAhDarB,G;;KAAAA,G;AAkDhB,eAAeA,GAAf","sourcesContent":["import { useState, useEffect } from 'react';\nimport Feedback from  './Feedback/feedback';\nimport Section from './Section/section';\nimport Statistics from './Statistics/statistics';\nimport Notification from './Notification/notification';\n\nexport function App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const [total, setTotal] = useState(0);\n\n  const countTotalFeedback = () => {\n    setTotal(good + neutral + bad);\n  };\n\n  const changePoint = e => {\n    this.setState(prevState => {\n      const currentName = e.target.name;\n      return { [currentName]: prevState[currentName] + 1 };\n    });\n  };\n  \n\n  const countPositiveFeedbackPercentage = () => {\n    const total = countTotalFeedback();\n    return Math.round((good * 100) / total);\n  };\n\n  \n    const options = {good, neutral, bad};\n    const totalFeedback = this.countTotalFeedback();\n    return (\n      <>\n        <Section title='Please leave feedback'>\n      <Feedback\n          options={options}\n          onLeaveFeedback={this.changePoint}\n      />\n</Section>\n<Section title='Statistics'>\n{!!totalFeedback && (\n    <Statistics \n      good={good} \n      neutral={neutral} \n      bad={bad} \n      total={totalFeedback}\n      positivePercentage={this.countPositiveFeedbackPercentage()}\n      />\n)}\n</Section>\n{!totalFeedback && <Notification message=\"There is no feedback\" />}\n      </>\n    )\n  }\n\nexport default App;"]},"metadata":{},"sourceType":"module"}